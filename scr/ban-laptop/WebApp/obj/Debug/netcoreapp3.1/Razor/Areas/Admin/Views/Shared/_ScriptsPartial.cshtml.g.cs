#pragma checksum "C:\Users\doanh\Downloads\ban-laptop\WebApp\Areas\Admin\Views\Shared\_ScriptsPartial.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "1ac770d9df165f41aa0a3f3c6e1ea742efa2d2bc20bdf52a32574c872f77e0bd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Areas_Admin_Views_Shared__ScriptsPartial), @"mvc.1.0.view", @"/Areas/Admin/Views/Shared/_ScriptsPartial.cshtml")]
namespace AspNetCoreGeneratedDocument
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\doanh\Downloads\ban-laptop\WebApp\Areas\Admin\Views\_ViewImports.cshtml"
using WebApp

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\doanh\Downloads\ban-laptop\WebApp\Areas\Admin\Views\_ViewImports.cshtml"
using WebApp.Areas.Admin.Models

#nullable disable
    ;
    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"1ac770d9df165f41aa0a3f3c6e1ea742efa2d2bc20bdf52a32574c872f77e0bd", @"/Areas/Admin/Views/Shared/_ScriptsPartial.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"31be4b5165da690ea111e4aefa9807cce9d816105571398c3731040d6b1195b1", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    #nullable restore
    internal sealed class Areas_Admin_Views_Shared__ScriptsPartial : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/js/Chart.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/js/utils.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/js/classie.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/js/SidebarNav.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/js/SimpleChart.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/js/bootstrap.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(" <!-- new added graphs chart js-->\n\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ac770d9df165f41aa0a3f3c6e1ea742efa2d2bc20bdf52a32574c872f77e0bd5989", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ac770d9df165f41aa0a3f3c6e1ea742efa2d2bc20bdf52a32574c872f77e0bd7054", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

    <script>
        var MONTHS = [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""];
        var color = Chart.helpers.color;
        var barChartData = {
            labels: [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July""],
            datasets: [{
                label: 'Dataset 1',
                backgroundColor: color(window.chartColors.red).alpha(0.5).rgbString(),
                borderColor: window.chartColors.red,
                borderWidth: 1,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ]
            }, {
                label: 'Dataset 2',
                backgroundColor: color(window.chartColors.blue).alpha(0.5).rgbSt");
            WriteLiteral(@"ring(),
                borderColor: window.chartColors.blue,
                borderWidth: 1,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ]
            }]

        };

        window.onload = function() {
            var ctx = document.getElementById(""canvas"").getContext(""2d"");
            window.myBar = new Chart(ctx, {
                type: 'bar',
                data: barChartData,
                options: {
                    responsive: true,
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Chart.js Bar Chart'
                    }
                }
            });

     ");
            WriteLiteral(@"   };

        document.getElementById('randomizeData').addEventListener('click', function() {
            var zero = Math.random() < 0.2 ? true : false;
            barChartData.datasets.forEach(function(dataset) {
                dataset.data = dataset.data.map(function() {
                    return zero ? 0.0 : randomScalingFactor();
                });

            });
            window.myBar.update();
        });

        var colorNames = Object.keys(window.chartColors);
        document.getElementById('addDataset').addEventListener('click', function() {
            var colorName = colorNames[barChartData.datasets.length % colorNames.length];;
            var dsColor = window.chartColors[colorName];
            var newDataset = {
                label: 'Dataset ' + barChartData.datasets.length,
                backgroundColor: color(dsColor).alpha(0.5).rgbString(),
                borderColor: dsColor,
                borderWidth: 1,
                data: []
            };

            for (var index =");
            WriteLiteral(@" 0; index < barChartData.labels.length; ++index) {
                newDataset.data.push(randomScalingFactor());
            }

            barChartData.datasets.push(newDataset);
            window.myBar.update();
        });

        document.getElementById('addData').addEventListener('click', function() {
            if (barChartData.datasets.length > 0) {
                var month = MONTHS[barChartData.labels.length % MONTHS.length];
                barChartData.labels.push(month);

                for (var index = 0; index < barChartData.datasets.length; ++index) {
                    //window.myBar.addData(randomScalingFactor(), index);
                    barChartData.datasets[index].data.push(randomScalingFactor());
                }

                window.myBar.update();
            }
        });

        document.getElementById('removeDataset').addEventListener('click', function() {
            barChartData.datasets.splice(0, 1);
            window.myBar.update();
        });

        document.getEl");
            WriteLiteral(@"ementById('removeData').addEventListener('click', function() {
            barChartData.labels.splice(-1, 1); // remove the label first

            barChartData.datasets.forEach(function(dataset, datasetIndex) {
                dataset.data.pop();
            });

            window.myBar.update();
        });
    </script>
    <!-- new added graphs chart js-->

    <!-- Classie -->
    <!-- for toggle left push menu script -->
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ac770d9df165f41aa0a3f3c6e1ea742efa2d2bc20bdf52a32574c872f77e0bd12817", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <script>
        var menuLeft = document.getElementById('cbp-spmenu-s1'),
            showLeftPush = document.getElementById('showLeftPush'),
            body = document.body;

        showLeftPush.onclick = function() {
            classie.toggle(this, 'active');
            classie.toggle(body, 'cbp-spmenu-push-toright');
            classie.toggle(menuLeft, 'cbp-spmenu-open');
            disableOther('showLeftPush');
        };


        function disableOther(button) {
            if (button !== 'showLeftPush') {
                classie.toggle(showLeftPush, 'disabled');
            }
        }
    </script>
    <!-- //Classie -->
    <!-- //for toggle left push menu script -->

    <!--scrolling js-->
");
            WriteLiteral("    <!--//scrolling js-->\n\n    <!-- side nav js -->\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ac770d9df165f41aa0a3f3c6e1ea742efa2d2bc20bdf52a32574c872f77e0bd14688", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n    <script>\n        $(\'.sidebar-menu\').SidebarNav()\n    </script>\n    <!-- //side nav js -->\n\n    <!-- for index page weekly sales java script -->\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ac770d9df165f41aa0a3f3c6e1ea742efa2d2bc20bdf52a32574c872f77e0bd15993", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <script>
        var graphdata1 = {
            linecolor: ""#CCA300"",
            title: ""Monday"",
            values: [{
                X: ""6:00"",
                Y: 10.00
            }, {
                X: ""7:00"",
                Y: 20.00
            }, {
                X: ""8:00"",
                Y: 40.00
            }, {
                X: ""9:00"",
                Y: 34.00
            }, {
                X: ""10:00"",
                Y: 40.25
            }, {
                X: ""11:00"",
                Y: 28.56
            }, {
                X: ""12:00"",
                Y: 18.57
            }, {
                X: ""13:00"",
                Y: 34.00
            }, {
                X: ""14:00"",
                Y: 40.89
            }, {
                X: ""15:00"",
                Y: 12.57
            }, {
                X: ""16:00"",
                Y: 28.24
            }, {
                X: ""17:00"",
                Y: 18.00
            }, {
                X: ""18:00"",
                Y: 34.24
        ");
            WriteLiteral(@"    }, {
                X: ""19:00"",
                Y: 40.58
            }, {
                X: ""20:00"",
                Y: 12.54
            }, {
                X: ""21:00"",
                Y: 28.00
            }, {
                X: ""22:00"",
                Y: 18.00
            }, {
                X: ""23:00"",
                Y: 34.89
            }, {
                X: ""0:00"",
                Y: 40.26
            }, {
                X: ""1:00"",
                Y: 28.89
            }, {
                X: ""2:00"",
                Y: 18.87
            }, {
                X: ""3:00"",
                Y: 34.00
            }, {
                X: ""4:00"",
                Y: 40.00
            }]
        };
        var graphdata2 = {
            linecolor: ""#00CC66"",
            title: ""Tuesday"",
            values: [{
                X: ""6:00"",
                Y: 100.00
            }, {
                X: ""7:00"",
                Y: 120.00
            }, {
                X: ""8:00"",
                Y: 140.00
    ");
            WriteLiteral(@"        }, {
                X: ""9:00"",
                Y: 134.00
            }, {
                X: ""10:00"",
                Y: 140.25
            }, {
                X: ""11:00"",
                Y: 128.56
            }, {
                X: ""12:00"",
                Y: 118.57
            }, {
                X: ""13:00"",
                Y: 134.00
            }, {
                X: ""14:00"",
                Y: 140.89
            }, {
                X: ""15:00"",
                Y: 112.57
            }, {
                X: ""16:00"",
                Y: 128.24
            }, {
                X: ""17:00"",
                Y: 118.00
            }, {
                X: ""18:00"",
                Y: 134.24
            }, {
                X: ""19:00"",
                Y: 140.58
            }, {
                X: ""20:00"",
                Y: 112.54
            }, {
                X: ""21:00"",
                Y: 128.00
            }, {
                X: ""22:00"",
                Y: 118.00
            }, {
                X:");
            WriteLiteral(@" ""23:00"",
                Y: 134.89
            }, {
                X: ""0:00"",
                Y: 140.26
            }, {
                X: ""1:00"",
                Y: 128.89
            }, {
                X: ""2:00"",
                Y: 118.87
            }, {
                X: ""3:00"",
                Y: 134.00
            }, {
                X: ""4:00"",
                Y: 180.00
            }]
        };
        var graphdata3 = {
            linecolor: ""#FF99CC"",
            title: ""Wednesday"",
            values: [{
                X: ""6:00"",
                Y: 230.00
            }, {
                X: ""7:00"",
                Y: 210.00
            }, {
                X: ""8:00"",
                Y: 214.00
            }, {
                X: ""9:00"",
                Y: 234.00
            }, {
                X: ""10:00"",
                Y: 247.25
            }, {
                X: ""11:00"",
                Y: 218.56
            }, {
                X: ""12:00"",
                Y: 268.57
            }, {
   ");
            WriteLiteral(@"             X: ""13:00"",
                Y: 274.00
            }, {
                X: ""14:00"",
                Y: 280.89
            }, {
                X: ""15:00"",
                Y: 242.57
            }, {
                X: ""16:00"",
                Y: 298.24
            }, {
                X: ""17:00"",
                Y: 208.00
            }, {
                X: ""18:00"",
                Y: 214.24
            }, {
                X: ""19:00"",
                Y: 214.58
            }, {
                X: ""20:00"",
                Y: 211.54
            }, {
                X: ""21:00"",
                Y: 248.00
            }, {
                X: ""22:00"",
                Y: 258.00
            }, {
                X: ""23:00"",
                Y: 234.89
            }, {
                X: ""0:00"",
                Y: 210.26
            }, {
                X: ""1:00"",
                Y: 248.89
            }, {
                X: ""2:00"",
                Y: 238.87
            }, {
                X: ""3:00"",
         ");
            WriteLiteral(@"       Y: 264.00
            }, {
                X: ""4:00"",
                Y: 270.00
            }]
        };
        var graphdata4 = {
            linecolor: ""Random"",
            title: ""Thursday"",
            values: [{
                X: ""6:00"",
                Y: 300.00
            }, {
                X: ""7:00"",
                Y: 410.98
            }, {
                X: ""8:00"",
                Y: 310.00
            }, {
                X: ""9:00"",
                Y: 314.00
            }, {
                X: ""10:00"",
                Y: 310.25
            }, {
                X: ""11:00"",
                Y: 318.56
            }, {
                X: ""12:00"",
                Y: 318.57
            }, {
                X: ""13:00"",
                Y: 314.00
            }, {
                X: ""14:00"",
                Y: 310.89
            }, {
                X: ""15:00"",
                Y: 512.57
            }, {
                X: ""16:00"",
                Y: 318.24
            }, {
                X: """);
            WriteLiteral(@"17:00"",
                Y: 318.00
            }, {
                X: ""18:00"",
                Y: 314.24
            }, {
                X: ""19:00"",
                Y: 310.58
            }, {
                X: ""20:00"",
                Y: 312.54
            }, {
                X: ""21:00"",
                Y: 318.00
            }, {
                X: ""22:00"",
                Y: 318.00
            }, {
                X: ""23:00"",
                Y: 314.89
            }, {
                X: ""0:00"",
                Y: 310.26
            }, {
                X: ""1:00"",
                Y: 318.89
            }, {
                X: ""2:00"",
                Y: 518.87
            }, {
                X: ""3:00"",
                Y: 314.00
            }, {
                X: ""4:00"",
                Y: 310.00
            }]
        };
        var Piedata = {
            linecolor: ""Random"",
            title: ""Profit"",
            values: [{
                X: ""Monday"",
                Y: 50.00
            }, {
        ");
            WriteLiteral(@"        X: ""Tuesday"",
                Y: 110.98
            }, {
                X: ""Wednesday"",
                Y: 70.00
            }, {
                X: ""Thursday"",
                Y: 204.00
            }, {
                X: ""Friday"",
                Y: 80.25
            }, {
                X: ""Saturday"",
                Y: 38.56
            }, {
                X: ""Sunday"",
                Y: 98.57
            }]
        };
        $(function() {
            $(""#Bargraph"").SimpleChart({
                ChartType: ""Bar"",
                toolwidth: ""50"",
                toolheight: ""25"",
                axiscolor: ""#E6E6E6"",
                textcolor: ""#6E6E6E"",
                showlegends: true,
                data: [graphdata4, graphdata3, graphdata2, graphdata1],
                legendsize: ""140"",
                legendposition: 'bottom',
                xaxislabel: 'Hours',
                title: 'Weekly Profit',
                yaxislabel: 'Profit in $'
            });
            $(""#sltchartype");
            WriteLiteral(@""").on('change', function() {
                $(""#Bargraph"").SimpleChart('ChartType', $(this).val());
                $(""#Bargraph"").SimpleChart('reload', 'true');
            });
            $(""#Hybridgraph"").SimpleChart({
                ChartType: ""Hybrid"",
                toolwidth: ""50"",
                toolheight: ""25"",
                axiscolor: ""#E6E6E6"",
                textcolor: ""#6E6E6E"",
                showlegends: true,
                data: [graphdata4],
                legendsize: ""140"",
                legendposition: 'bottom',
                xaxislabel: 'Hours',
                title: 'Weekly Profit',
                yaxislabel: 'Profit in $'
            });
            $(""#Linegraph"").SimpleChart({
                ChartType: ""Line"",
                toolwidth: ""50"",
                toolheight: ""25"",
                axiscolor: ""#E6E6E6"",
                textcolor: ""#6E6E6E"",
                showlegends: false,
                data: [graphdata4, graphdata3, graphdata2, graphdata1],
          ");
            WriteLiteral(@"      legendsize: ""140"",
                legendposition: 'bottom',
                xaxislabel: 'Hours',
                title: 'Weekly Profit',
                yaxislabel: 'Profit in $'
            });
            $(""#Areagraph"").SimpleChart({
                ChartType: ""Area"",
                toolwidth: ""50"",
                toolheight: ""25"",
                axiscolor: ""#E6E6E6"",
                textcolor: ""#6E6E6E"",
                showlegends: true,
                data: [graphdata4, graphdata3, graphdata2, graphdata1],
                legendsize: ""140"",
                legendposition: 'bottom',
                xaxislabel: 'Hours',
                title: 'Weekly Profit',
                yaxislabel: 'Profit in $'
            });
            $(""#Scatterredgraph"").SimpleChart({
                ChartType: ""Scattered"",
                toolwidth: ""50"",
                toolheight: ""25"",
                axiscolor: ""#E6E6E6"",
                textcolor: ""#6E6E6E"",
                showlegends: true,
                d");
            WriteLiteral(@"ata: [graphdata4, graphdata3, graphdata2, graphdata1],
                legendsize: ""140"",
                legendposition: 'bottom',
                xaxislabel: 'Hours',
                title: 'Weekly Profit',
                yaxislabel: 'Profit in $'
            });
            $(""#Piegraph"").SimpleChart({
                ChartType: ""Pie"",
                toolwidth: ""50"",
                toolheight: ""25"",
                axiscolor: ""#E6E6E6"",
                textcolor: ""#6E6E6E"",
                showlegends: true,
                showpielables: true,
                data: [Piedata],
                legendsize: ""250"",
                legendposition: 'right',
                xaxislabel: 'Hours',
                title: 'Weekly Profit',
                yaxislabel: 'Profit in $'
            });

            $(""#Stackedbargraph"").SimpleChart({
                ChartType: ""Stacked"",
                toolwidth: ""50"",
                toolheight: ""25"",
                axiscolor: ""#E6E6E6"",
                textcolor: ""#6E");
            WriteLiteral(@"6E6E"",
                showlegends: true,
                data: [graphdata3, graphdata2, graphdata1],
                legendsize: ""140"",
                legendposition: 'bottom',
                xaxislabel: 'Hours',
                title: 'Weekly Profit',
                yaxislabel: 'Profit in $'
            });

            $(""#StackedHybridbargraph"").SimpleChart({
                ChartType: ""StackedHybrid"",
                toolwidth: ""50"",
                toolheight: ""25"",
                axiscolor: ""#E6E6E6"",
                textcolor: ""#6E6E6E"",
                showlegends: true,
                data: [graphdata3, graphdata2, graphdata1],
                legendsize: ""140"",
                legendposition: 'bottom',
                xaxislabel: 'Hours',
                title: 'Weekly Profit',
                yaxislabel: 'Profit in $'
            });
        });
    </script>
    <!-- //for index page weekly sales java script -->


    <!-- Bootstrap Core JavaScript -->
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ac770d9df165f41aa0a3f3c6e1ea742efa2d2bc20bdf52a32574c872f77e0bd29995", async() => {
                WriteLiteral("\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n    <!-- //Bootstrap Core JavaScript -->");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
